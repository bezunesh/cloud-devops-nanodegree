version: 2.1
commands:
  destroy_environments:
    steps:
      run:  
        command: |
          aws cloudformation --delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          command: |
            aws cloudformation deploy \
                --stack-name prod-${CIRCLE_WORKFLOW_ID} \
                --template-file template.yml \
      - run:
          name: simulate error
          command: |
            return 1
      - destroy_environment:
        when: on_fail

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["bc:16:b3:a6:72:c4:98:8d:05:0a:83:11:3b:ac:bd:af"] 
      - run: apk add -qU openssh   
      - run: ssh-keyscan 3.235.239.109 >> ~/.ssh/known_hosts
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook -i ansible/inventory.txt ansible/playbook.yml
    
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          command: |
            if curl -s --head "https://google.com" 
            then 
              return  0
            else
              return 1
            fi
            
workflows:
  my_workflow:
    jobs:
      - create_infrastructure
     # - configure_infrastructure
     # - smoke_test:
     #     requires:
     #       - configure_infrastructure